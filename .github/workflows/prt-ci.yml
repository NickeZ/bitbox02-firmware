# See reference docs at
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
#
# * Base or target branch: the branch being merged into, typically the default branch.
# * Pull request branch: the branch being merged from, potentially in a fork of the main repo.
#
# The regular `pull_request` event type runs the workflows as they are defined in the pull request
# branch. This has lead to github limiting the permissions for the `pull_request` type, it cannot
# read secrets and it cannot have write permissions.
#
# The event type below, `pull_request_target`, runs them as they are defined in the base branch.
# This means that it is harder for an attacker to inject code. However, if we check out the pull
# request branch, execute a local script and later use a github secret, that secret can be leaked.
#
# We need to check out the code, since we want to run our CI with it. We also need to run a local
# script to actually run the CI. This means that we should not use secrets in this workflow.
#
# SAFETY:
# * Do not use github secrets in the workflow below.

name: Pull request target CI
on: pull_request_target

permissions:
  statuses: write

jobs:
  generate-matrix:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.base.sha }}
          fetch-depth: 0

      # HEAD~ because  we want to skip the last commit (which is built in another job)
      - name: Create jobs for commits in PR history
        id: set-matrix
        run: |
          echo matrix=$(.ci/matrix-from-commit-log origin/${{github.base_ref}}..${{ github.event.pull_request.head.sha}}~) >> $GITHUB_OUTPUT

  per-commit:
    runs-on: ubuntu-22.04
    needs: [ generate-matrix ]
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    if: needs.generate-matrix.outputs.matrix != ''
    steps:
      - name: Set commit status to pending
        run: |
          curl -L -s \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ matrix.commit }} \
            -d '{"state":"pending","target_url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}","description":"The build started!","context":"ci / per-commit-build"}'

      - name: Clone the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Create merge commit
        env:
          GIT_AUTHOR_NAME: Bot
          GIT_AUTHOR_EMAIL: bot@bitbox.swiss
          GIT_COMMITTER_NAME: Bot
          GIT_COMMITTER_EMAIL: bot@bitbox.swiss
        run: |
          git fetch origin ${{ matrix.commit }}
          git merge --no-ff --no-edit ${{ matrix.commit }}
          echo "merge commit parents:"
          git log -1 --format="Head %H, Parents %P"

      - name: Pull container image
        run: ./.ci/run-container-ci pull

      - name: Run CI in container
        run: ./.ci/run-container-ci ${{github.workspace}} ${{ github.base_ref }}

      - name: Set status
        if: always()
        run: |
          curl -L -s \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ matrix.commit }} \
            -d '{"state":"${{job.status}}","target_url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}","description":"The build completed!","context":"ci / per-commit-build"}'
